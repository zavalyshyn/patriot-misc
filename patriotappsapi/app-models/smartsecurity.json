{
  "model": "%%---------------------------------------------------------\n% SmartSecurity App Model\n%%---------------------------------------------------------\n\n%%---------------------------------------------------------\n% App elements\n%%---------------------------------------------------------\n\nelement(motionsensor).\nelement(contactsensor).\nelement(or).\nelement(pushnotifier).\nelement(ipcamera).\nelement(untrusted).\nelement(alarm).\nelement(timer).\nelement(tap).\nelement(not).\nelement(httprequest).\n\n%%---------------------------------------------------------\n% Element instances\n%%---------------------------------------------------------\n\nei(e1,motionsensor).\nei(e2,contactsensor).\nei(e3,or).\nei(e4,pushnotifier).\nei(e5,ipcamera).\nei(e6,untrusted).\nei(e7,alarm).\nei(e8,timer).\nei(e9,tap).\nei(e10,not).\nei(e11,httprequest).\n\n%%---------------------------------------------------------\n% Untrusted element\n%%---------------------------------------------------------\n\nuntrusted(e6).\n\n%%---------------------------------------------------------\n% App connections\n%%---------------------------------------------------------\n\nconnection(e1,motiondetectedport,e3,orin1port,simplex).\nconnection(e2,contactopenport,e3,orin2port,simplex).\nconnection(e3,oroutport,e6,oroutport,simplex).\nconnection(e3,oroutport,e8,starttimeronceport,simplex).\nconnection(e5,cameraframeport,e6,cameraframeport,simplex).\nconnection(e6,getframeport,e5,getframeport,duplex).\nconnection(e6,triggeralarmport,e7,triggeralarmport,simplex).\nconnection(e6,sendpushwithimageport,e4,sendpushwithimageport,simplex).\nconnection(e6,tapinport,e9,tapinport,duplex).\nconnection(e6,gettapstateport,e9,gettapstateport,duplex).\nconnection(e4,dismissreceivedport,e10,notinport,simplex).\nconnection(e4,dismissreceivedport,e8,stoptimerport,simplex).\nconnection(e8,timerexpiredport,e9,tapconditionport,simplex).\nconnection(e9,tapoutport,e11,httppostport,duplex).\nconnection(e10,notoutport,e9,tapconditionport,simplex).\n\n%%---------------------------------------------------------\n% App configs\n%%---------------------------------------------------------\n\nconfig(10000,time,timer).\nconfig('146.193.41.162/intrusion',hostname,httprequest).\n\n%%---------------------------------------------------------\n% Attributes\n%%---------------------------------------------------------\n\nattribute(motion_detected,motionsensor).\nattribute(contact_open,contactsensor).\nattribute(contact_closed,contactsensor).\nattribute(dismiss_received,pushnotifier).\nattribute(camera_frame,ipcamera).\nattribute(timer_expired,timer).\nattribute(tap_state,tap).\nattribute(data_from_internet,httprequest).\n\n%%---------------------------------------------------------\n% Attribute types\n%%---------------------------------------------------------\n\nattrtype(motion_detected,boolean).\nattrtype(contact_open,boolean).\nattrtype(contact_closed,boolean).\nattrtype(dismiss_received,boolean).\nattrtype(camera_frame,image).\nattrtype(timer_expired,boolean).\nattrtype(tap_state,boolean).\nattrtype(data_from_internet,externaldata).\n\n%%---------------------------------------------------------\n% Supported attribute types for a given element's port\n% portdatatype([INTYPES],[OUTTYPES],PORT,ELEMENT)\n%%---------------------------------------------------------\n\nportdatatype([],[boolean],motiondetectedport,motionsensor).\nportdatatype([],[boolean],contactclosedport,contactsensor).\nportdatatype([],[boolean],contactopenport,contactsensor).\nportdatatype([boolean],[],orin1port,or).\nportdatatype([boolean],[],orin2port,or).\nportdatatype([],[boolean],oroutport,or).\nportdatatype([text,image],[],sendpushwithimageport,pushnotifier).\nportdatatype([text],[],sendpushmessageport,pushnotifier).\nportdatatype([],[boolean],dismissreceivedport,pushnotifier).\nportdatatype([],[image],getframeport,ipcamera).\nportdatatype([],[image],cameraframeport,ipcamera).\nportdatatype(any,any,_,untrusted).\nportdatatype([],[],triggeralarmport,alarm).\nportdatatype([boolean],[],starttimerport,timer).\nportdatatype([boolean],[],starttimeronceport,timer).\nportdatatype([boolean],[],stoptimerport,timer).\nportdatatype([],[boolean],timerexpiredport,timer).\nportdatatype([boolean],[],tapconditionport,tap).\nportdatatype(any,any,tapinport,tap). % can be duplex\nportdatatype(any,any,tapoutport,tap).% can be duplex\nportdatatype([boolean],[],notinport,not).\nportdatatype([],[boolean],notoutport,not).\nportdatatype(any,any,httppostport,httprequest).\nportdatatype(any,any,httpgetport,httprequest).\nportdatatype(any,any,httpputport,httprequest).\nportdatatype(any,any,httpdeleteport,httprequest).\n\n%%---------------------------------------------------------\n% Elements' ports that stop attribute propagation\n%%---------------------------------------------------------\n\nstopport(sendpushwithimageport,pushnotifier).\nstopport(sendpushmessageport,pushnotifier).\nstopport(triggeralarmport,alarm).\nstopport(stoptimerport,timer).\nstopport(tapconditionport,tap).\n\n%%---------------------------------------------------------\n% Elements' output rules\n%%---------------------------------------------------------\n\noutput(X,motiondetectedport,Attr,Value,Trans,Time) :-\n\tei(X,motionsensor),\n\tAttr = [motion_detected],\n\tValue=[true],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,motiondetectedport,Attr,Value,Trans,Time) :-\n\tei(X,motionsensor),\n\tAttr = [motion_detected],\n\tValue=[false],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,contactopenport,Attr,Value,Trans,Time) :-\n\tei(X,contactsensor),\n\tAttr = [contact_open],\n\tValue=[true],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,contactopenport,Attr,Value,Trans,Time) :-\n\tei(X,contactsensor),\n\tAttr = [contact_open],\n\tValue=[false],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,contactclosedport,Attr,Value,Trans,Time) :-\n\tei(X,contactsensor),\n\tAttr = [contact_closed],\n\tValue=[true],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,contactclosedport,Attr,Value,Trans,Time) :-\n\tei(X,contactsensor),\n\tAttr = [contact_closed],\n\tValue=[false],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,oroutport,Attr,Value,Trans,Time) :-\n\tei(X,or),\n\tinput(X,orin1port,Attr,ValueIn,Trans,TimeIn),\n\tmember(true,ValueIn),\n\tValue = [true],\n\tTime is TimeIn.\n\noutput(X,oroutport,Attr,Value,Trans,Time) :-\n\tei(X,or),\n\tinput(X,orin2port,Attr,ValueIn,Trans,TimeIn),\n\tmember(true,ValueIn),\n\tValue = [true],\n\tTime is TimeIn.\n\n%output(X,oroutport,Attr,Value,Trans,Time) :-\n%\tei(X,or),\n%\tinput(X,orin1port,Attr1,ValueIn1,Trans1,TimeIn1),\n%\tmember(false,ValueIn1),\n%\tinput(X,orin2port,Attr2,ValueIn2,Trans2,TimeIn2),\n%\tmember(false,ValueIn2),\n%\tValue = [false],\n%\tAttr = [Attr1,Attr2],\n%\tTrans = [Trans1,Trans2],\n%\tTime is max(TimeIn1,TimeIn2).\n\noutput(X,dismissreceivedport,Attr,Value,Trans,Time) :-\n\tei(X,pushnotifier),\n\tAttr = [dismiss_received],\n\tValue = [true],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,cameraframeport,Attr,Value,Trans,Time) :-\n\tei(X,ipcamera),\n\tAttr = [camera_frame],\n\tValue = [cameraframe],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,getframeport,Attr,Value,Trans,Time) :-\n\tei(X,ipcamera),\n\tAttr = [camera_frame],\n\tValue = [cameraframe],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,_,Attr,Value,Trans,Time):-\n\tei(X,untrusted),\n\tuntrusted(X),\n\tallattr(X,Attr),\n\tallvalues(X,Value),\n\talltransforms(X,Trans),\n\talltimes(X,Time).\n\noutput(X,timerexpiredport,Attr,Value,Trans,Time) :-\n\tei(X,timer),\n\tconfig(Timeout,time,timer),\n\tinput(X,settimerport,_,_,Trans,TimeIn),\n\tAttr = [timer_expired],\n\tValue = [true],\n\tTime is TimeIn + Timeout.\n\noutput(X,timerexpiredport,Attr,Value,Trans,Time) :-\n\tei(X,timer),\n\tconfig(Timeout,time,timer),\n\tinput(X,starttimerport,_,_,Trans,TimeIn),\n\tAttr = [timer_expired],\n\tValue = [true],\n\tTime is TimeIn + Timeout.\n\noutput(X,timerexpiredport,Attr,Value,Trans,Time) :-\n\tei(X,timer),\n\tconfig(Timeout,time,timer),\n\tinput(X,starttimeronceport,_,_,Trans,TimeIn),\n\tAttr = [timer_expired],\n\tValue = [true],\n\tTime is TimeIn + Timeout.\n\noutput(X,tapoutport,Attr,Value,Trans,Time) :-\n\tei(X,tap),\n\tinput(X,tapconditionport,_,ValueCond,_,TimeInCond),\n\tmember(true,ValueCond),\n\tinput(X,tapinport,Attr,Value,Trans,TimeIn),\n\tTime is max(TimeIn,TimeInCond).\n\noutput(X,tapinport,Attr,Value,Trans,Time) :-\n\tei(X,tap),\n\tinput(X,tapconditionport,_,ValueCond,_,_),\n\tmember(true,ValueCond),\n\tinput(X,tapoutport,Attr,Value,Trans,Time).\n\noutput(X,gettapstateport,Attr,Value,Trans,Time) :-\n\tei(X,tap),\n\tAttr = [tap_state],\n\tValue = [true],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,gettapstateport,Attr,Value,Trans,Time) :-\n\tei(X,tap),\n\tAttr = [tap_state],\n\tValue = [false],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,notoutport,Attr,Value,Trans,Time) :-\n\tei(X,not),\n\tinput(X,notinport,Attr,ValueIn,Trans,TimeIn),\n\tTime is TimeIn,\n\t% A -> X ; Y means if A is true then X otherwise Y\n\t(member(true,ValueIn) -> Value = [false] ; Value = [true]).\n\noutput(X,httpgetport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httppostport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httpputport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httpdeleteport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\n\n%----------------------------------------------------------\n%% Helper rules for the elements' output\n%----------------------------------------------------------\n\n% Helper rules for the untrusted element\nallattr(ElInstance, Result) :-\n\tfindall(Attr, input(ElInstance,_,Attr,_,_,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nallvalues(ElInstance, Result) :-\n\tfindall(Value, input(ElInstance,_,_,Value,_,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nalltransforms(ElInstance, Result) :-\n\tfindall(Trans, input(ElInstance,_,_,_,Trans,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nalltimes(ElInstance, Final) :-\n\tfindall(Time, input(ElInstance,_,_,_,_,Time),Times),\n\tfindmax(Times,Final).\n\n\naccMax([H|T],Acc,Max) :-\n\tH > Acc,\n\taccMax(T,H,Max).\n\naccMax([H|T],Acc,Max) :-\n\tH =< Acc,\n\taccMax(T,Acc,Max).\n\naccMax([],Acc,Acc).\n\nfindmax(List,Max) :-\n\tList = [H|_],\n\taccMax(List,H,Max).\n"
}