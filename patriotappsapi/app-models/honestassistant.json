{
  "model": "%%---------------------------------------------------------\n% HonestAssistant App Model\n%%---------------------------------------------------------\n\n%%---------------------------------------------------------\n% App elements\n%%---------------------------------------------------------\n\nelement(wakeworddetection).\nelement(untrusted).\nelement(httprequest).\n\n%%---------------------------------------------------------\n% Element instances\n%%---------------------------------------------------------\n\nei(e1,wakeworddetection).\nei(e2,untrusted).\nei(e3,httprequest).\n\n%%---------------------------------------------------------\n% Untrusted element\n%%---------------------------------------------------------\n\nuntrusted(e2).\n\n%%---------------------------------------------------------\n% App connections\n%%---------------------------------------------------------\n\nconnection(e1,audioport,e2,audioport,simplex).\nconnection(e2,httppostport,e3,httppostport,duplex).\n\n%%---------------------------------------------------------\n% App configs\n%%---------------------------------------------------------\n\nconfig('146.193.41.162/audio',hostname,httprequest).\n\n%%---------------------------------------------------------\n% Attributes\n%%---------------------------------------------------------\n\nattribute(voice_command,wakeworddetection).\nattribute(data_from_internet,httprequest).\n\n%%---------------------------------------------------------\n% Attribute types\n%%---------------------------------------------------------\n\nattrtype(voice_command,audio).\nattrtype(data_from_internet,externaldata).\n\n%%---------------------------------------------------------\n% Supported attribute types for a given element's port\n% portdatatype([INTYPES],[OUTTYPES],PORT,ELEMENT)\n%%---------------------------------------------------------\n\nportdatatype([],[audio],audioport,wakeworddetection).\nportdatatype(any,any,_,untrusted).\nportdatatype(any,any,httppostport,httprequest).\nportdatatype(any,any,httpgetport,httprequest).\nportdatatype(any,any,httpputport,httprequest).\nportdatatype(any,any,httpdeleteport,httprequest).\n\n%%---------------------------------------------------------\n% Elements' ports that stop attribute propagation\n%%---------------------------------------------------------\n\n\n%%---------------------------------------------------------\n% Elements' output rules\n%%---------------------------------------------------------\n\noutput(X,audioport,Attr,Value,Trans,Time) :-\n\tei(X,wakeworddetection),\n\tAttr = [voice_command],\n\tValue = [audiorecording],\n\tTrans = [],\n\tTime = 0.\n\noutput(X,_,Attr,Value,Trans,Time):-\n\tei(X,untrusted),\n\tuntrusted(X),\n\tallattr(X,Attr),\n\tallvalues(X,Value),\n\talltransforms(X,Trans),\n\talltimes(X,Time).\n\noutput(X,httpgetport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httppostport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httpputport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httpdeleteport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\n\n%----------------------------------------------------------\n%% Helper rules for the elements' output\n%----------------------------------------------------------\n\n% Helper rules for the untrusted element\nallattr(ElInstance, Result) :-\n\tfindall(Attr, input(ElInstance,_,Attr,_,_,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nallvalues(ElInstance, Result) :-\n\tfindall(Value, input(ElInstance,_,_,Value,_,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nalltransforms(ElInstance, Result) :-\n\tfindall(Trans, input(ElInstance,_,_,_,Trans,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nalltimes(ElInstance, Final) :-\n\tfindall(Time, input(ElInstance,_,_,_,_,Time),Times),\n\tfindmax(Times,Final).\n\n\naccMax([H|T],Acc,Max) :-\n\tH > Acc,\n\taccMax(T,H,Max).\n\naccMax([H|T],Acc,Max) :-\n\tH =< Acc,\n\taccMax(T,Acc,Max).\n\naccMax([],Acc,Acc).\n\nfindmax(List,Max) :-\n\tList = [H|_],\n\taccMax(List,H,Max).\n"
}