{
  "model": "%%---------------------------------------------------------\n% LightMyPath App Model\n%%---------------------------------------------------------\n\n%%---------------------------------------------------------\n% App elements\n%%---------------------------------------------------------\n\nelement(motionsensor).\nelement(smartlight).\nelement(timer).\nelement(untrusted).\n\n%%---------------------------------------------------------\n% Element instances\n%%---------------------------------------------------------\n\nei(e1,motionsensor).\nei(e2,smartlight).\nei(e3,timer).\nei(e4,untrusted).\n\n%%---------------------------------------------------------\n% Untrusted element\n%%---------------------------------------------------------\n\nuntrusted(e4).\n\n%%---------------------------------------------------------\n% App connections\n%%---------------------------------------------------------\n\nconnection(e1,motiondetectedport,e4,motiondetectedport,simplex).\nconnection(e1,motiondetectedport,e3,starttimerport,simplex).\nconnection(e4,turnonlightport,e2,turnonlightport,simplex).\nconnection(e4,turnofflightport,e2,turnofflightport,simplex).\nconnection(e4,getlightstateport,e2,getlightstateport,duplex).\nconnection(e3,timerexpiredport,e4,timerexpiredport,simplex).\n\n%%---------------------------------------------------------\n% App configs\n%%---------------------------------------------------------\n\nconfig(30000,time,timer).\n\n%%---------------------------------------------------------\n% Attributes\n%%---------------------------------------------------------\n\nattribute(motion_detected,motionsensor).\nattribute(light_state,smartlight).\nattribute(timer_expired,timer).\n\n%%---------------------------------------------------------\n% Attribute types\n%%---------------------------------------------------------\n\nattrtype(motion_detected,boolean).\nattrtype(light_state,boolean).\nattrtype(timer_expired,boolean).\n\n%%---------------------------------------------------------\n% Supported attribute types for a given element's port\n% portdatatype([INTYPES],[OUTTYPES],PORT,ELEMENT)\n%%---------------------------------------------------------\n\nportdatatype([],[boolean],motiondetectedport,motionsensor).\nportdatatype([],[],turnonlightport,smartlight).\nportdatatype([],[],turnofflightport,smartlight).\nportdatatype([],[boolean],getlightstateport,smartlight).\nportdatatype([boolean],[],starttimerport,timer).\nportdatatype([boolean],[],starttimeronceport,timer).\nportdatatype([boolean],[],stoptimerport,timer).\nportdatatype([],[boolean],timerexpiredport,timer).\nportdatatype(any,any,_,untrusted).\n\n%%---------------------------------------------------------\n% Elements' ports that stop attribute propagation\n%%---------------------------------------------------------\n\nstopport(turnonlightport,smartlight).\nstopport(turnofflightport,smartlight).\nstopport(stoptimerport,timer).\n\n%%---------------------------------------------------------\n% Elements' output rules\n%%---------------------------------------------------------\n\noutput(X,motiondetectedport,Attr,Value,Trans,Time) :-\n\tei(X,motionsensor),\n\tAttr = [motion_detected],\n\tValue=[true],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,motiondetectedport,Attr,Value,Trans,Time) :-\n\tei(X,motionsensor),\n\tAttr = [motion_detected],\n\tValue=[false],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,getlightstateport,Attr,Value,Trans,Time) :-\n\tei(X,smartlight),\n\tAttr = [light_state],\n\tValue = [true],\n\tTrans = [],\n\tTime = 0.\n\noutput(X,getlightstateport,Attr,Value,Trans,Time) :-\n\tei(X,smartlight),\n\tAttr = [light_state],\n\tValue = [false],\n\tTrans = [],\n\tTime = 0.\n\noutput(X,timerexpiredport,Attr,Value,Trans,Time) :-\n\tei(X,timer),\n\tconfig(Timeout,time,timer),\n\tinput(X,settimerport,_,_,Trans,TimeIn),\n\tAttr = [timer_expired],\n\tValue = [true],\n\tTime is TimeIn + Timeout.\n\noutput(X,timerexpiredport,Attr,Value,Trans,Time) :-\n\tei(X,timer),\n\tconfig(Timeout,time,timer),\n\tinput(X,starttimerport,_,_,Trans,TimeIn),\n\tAttr = [timer_expired],\n\tValue = [true],\n\tTime is TimeIn + Timeout.\n\noutput(X,timerexpiredport,Attr,Value,Trans,Time) :-\n\tei(X,timer),\n\tconfig(Timeout,time,timer),\n\tinput(X,starttimeronceport,_,_,Trans,TimeIn),\n\tAttr = [timer_expired],\n\tValue = [true],\n\tTime is TimeIn + Timeout.\n\noutput(X,_,Attr,Value,Trans,Time):-\n\tei(X,untrusted),\n\tuntrusted(X),\n\tallattr(X,Attr),\n\tallvalues(X,Value),\n\talltransforms(X,Trans),\n\talltimes(X,Time).\n\n\n%----------------------------------------------------------\n%% Helper rules for the elements' output\n%----------------------------------------------------------\n\n% Helper rules for the untrusted element\nallattr(ElInstance, Result) :-\n\tfindall(Attr, input(ElInstance,_,Attr,_,_,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nallvalues(ElInstance, Result) :-\n\tfindall(Value, input(ElInstance,_,_,Value,_,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nalltransforms(ElInstance, Result) :-\n\tfindall(Trans, input(ElInstance,_,_,_,Trans,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nalltimes(ElInstance, Final) :-\n\tfindall(Time, input(ElInstance,_,_,_,_,Time),Times),\n\tfindmax(Times,Final).\n\n\naccMax([H|T],Acc,Max) :-\n\tH > Acc,\n\taccMax(T,H,Max).\n\naccMax([H|T],Acc,Max) :-\n\tH =< Acc,\n\taccMax(T,Acc,Max).\n\naccMax([],Acc,Acc).\n\nfindmax(List,Max) :-\n\tList = [H|_],\n\taccMax(List,H,Max).\n"
}