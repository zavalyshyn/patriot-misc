{
  "model": "%%---------------------------------------------------------\n% SmartCameraWEncryption App Model\n%%---------------------------------------------------------\n\n%%---------------------------------------------------------\n% App elements\n%%---------------------------------------------------------\n\nelement(ipcamera).\nelement(aesencryption).\nelement(timecontroller).\nelement(tap).\nelement(httprequest).\nelement(untrusted).\n\n%%---------------------------------------------------------\n% Element instances\n%%---------------------------------------------------------\n\nei(e1,ipcamera).\nei(e2,aesencryption).\nei(e3,timecontroller).\nei(e4,tap).\nei(e5,httprequest).\nei(e6,untrusted).\n\n%%---------------------------------------------------------\n% Untrusted element\n%%---------------------------------------------------------\n\nuntrusted(e6).\n\n%%---------------------------------------------------------\n% App connections\n%%---------------------------------------------------------\n\nconnection(e1,cameraframeport,e2,encryptdatainport,simplex).\nconnection(e2,encryptdataoutport,e6,encryptdataoutport,simplex).\nconnection(e6,tapinport,e4,tapinport,duplex).\nconnection(e6,gettapstateport,e4,gettapstateport,duplex).\nconnection(e4,tapoutport,e5,httppostport,duplex).\nconnection(e3,controlsignalport,e4,tapconditionport,simplex).\n\n%%---------------------------------------------------------\n% App configs\n%%---------------------------------------------------------\n\nconfig(10,starthour,timecontroller).\nconfig(00,startminute,timecontroller).\nconfig(18,endhour,timecontroller).\nconfig(00,endminute,timecontroller).\nconfig('146.193.41.162/intrusion',hostname,httprequest).\n\n%%---------------------------------------------------------\n% Attributes\n%%---------------------------------------------------------\n\nattribute(camera_frame,ipcamera).\nattribute(encrypted_data,aesencryption).\nattribute(time_control_signal,timecontroller).\nattribute(tap_state,tap).\nattribute(data_from_internet,httprequest).\n\n%%---------------------------------------------------------\n% Attribute types\n%%---------------------------------------------------------\n\nattrtype(camera_frame,image).\nattrtype(encrypted_data,encrypteddata).\nattrtype(time_control_signal,boolean).\nattrtype(tap_state,boolean).\nattrtype(data_from_internet,externaldata).\n\n%%---------------------------------------------------------\n% Supported attribute types for a given element's port\n% portdatatype([INTYPES],[OUTTYPES],PORT,ELEMENT)\n%%---------------------------------------------------------\n\nportdatatype([],[image],getframeport,ipcamera).\nportdatatype([],[image],cameraframeport,ipcamera).\nportdatatype(any,[],encryptdatainport,aesencryption).\nportdatatype([],[encrypteddata],encryptdataoutport,aesencryption).\nportdatatype([],[boolean],controlsignalport,timecontroller).\nportdatatype([boolean],[],tapconditionport,tap).\nportdatatype(any,any,tapinport,tap). % can be duplex\nportdatatype(any,any,tapoutport,tap).% can be duplex\nportdatatype(any,any,httppostport,httprequest).\nportdatatype(any,any,httpgetport,httprequest).\nportdatatype(any,any,httpputport,httprequest).\nportdatatype(any,any,httpdeleteport,httprequest).\nportdatatype(any,any,_,untrusted).\n\n%%---------------------------------------------------------\n% Elements' ports that stop attribute propagation\n%%---------------------------------------------------------\n\nstopport(controlsignalport,timecontroller).\nstopport(tapconditionport,tap).\n\n%%---------------------------------------------------------\n% Elements' output rules\n%%---------------------------------------------------------\n\noutput(X,cameraframeport,Attr,Value,Trans,Time) :-\n\tei(X,ipcamera),\n\tAttr = [camera_frame],\n\tValue = [cameraframe],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,getframeport,Attr,Value,Trans,Time) :-\n\tei(X,ipcamera),\n\tAttr = [camera_frame],\n\tValue = [cameraframe],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,encryptdataoutport,Attr,Value,Trans,Time) :-\n\tei(X,aesencryption),\n\tinput(X,encryptdatainport,AttrIn,_,TransIn,Time),\n\taddencryptedprefix(AttrIn,TransOut),\n\tAttr = [encrypted_data],\n\tValue = [],\n\t%append(TransIn, [t(H, encrypted, X)], Trans),  % nuno's ver.\n\tappend(TransIn, TransOut, Trans).\n\n% true signal is only sent when the time is right\noutput(X,controlsignalport,Attr,Value,Trans,Time) :-\n\tei(X,timecontroller),\n\tconfig(StartH,starthour,timecontroller),\n\tconfig(StartM,startminute,timecontroller),\n\tconfig(EndH,endhour,timecontroller),\n\tconfig(EndM,endminute,timecontroller),\n\ttimeok(StartH,StartM,EndH,EndM),\n\tAttr = [time_control_signal],\n\tValue = [true],\n\tTrans = [],\n\tTime is 0.\n\n% false signal is sent otherwise\noutput(X,controlsignalport,Attr,Value,Trans,Time) :-\n\tei(X,timecontroller),\n\tconfig(StartH,starthour,timecontroller),\n\tconfig(StartM,startminute,timecontroller),\n\tconfig(EndH,endhour,timecontroller),\n\tconfig(EndM,endminute,timecontroller),\n\tnot(timeok(StartH,StartM,EndH,EndM)),\n\tAttr = [time_control_signal],\n\tValue = [false],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,tapoutport,Attr,Value,Trans,Time) :-\n\tei(X,tap),\n\tinput(X,tapconditionport,_,ValueCond,_,TimeInCond),\n\tmember(true,ValueCond),\n\tinput(X,tapinport,Attr,Value,Trans,TimeIn),\n\tTime is max(TimeIn,TimeInCond).\n\noutput(X,tapinport,Attr,Value,Trans,Time) :-\n\tei(X,tap),\n\tinput(X,tapconditionport,_,ValueCond,_,_),\n\tmember(true,ValueCond),\n\tinput(X,tapoutport,Attr,Value,Trans,Time).\n\noutput(X,gettapstateport,Attr,Value,Trans,Time) :-\n\tei(X,tap),\n\tAttr = [tap_state],\n\tValue = [true],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,gettapstateport,Attr,Value,Trans,Time) :-\n\tei(X,tap),\n\tAttr = [tap_state],\n\tValue = [false],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httpgetport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httppostport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httpputport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,httpdeleteport,Attr,Value,Trans,Time) :-\n\tei(X,httprequest),\n\tAttr = [data_from_internet],\n\tValue = [],\n\tTrans = [],\n\tTime is 0.\n\noutput(X,_,Attr,Value,Trans,Time):-\n\tei(X,untrusted),\n\tuntrusted(X),\n\tallattr(X,Attr),\n\tallvalues(X,Value),\n\talltransforms(X,Trans),\n\talltimes(X,Time).\n\n\n%----------------------------------------------------------\n%% Helper rules for the elements' output\n%----------------------------------------------------------\n\n% Helper rules for the aesencryption element\n\naddencryptedprefix([],[]).\n\naddencryptedprefix([H|T],[NewAttr|Rest]) :-\n\tatom_concat('encrypted_',H,NewAttr),\n\taddencryptedprefix(T,Rest).\n% Helper rules for the timecontroller element\ncurrenttime(Year,Month,Day,Hour,Minute,Second,Off,TZ,DST) :-\n\tget_time(Stamp),\n\tstamp_date_time(Stamp, DateTime, local),\n\tdate_time_value(year, DateTime, Year),\n\tdate_time_value(month, DateTime, Month),\n\tdate_time_value(day, DateTime, Day),\n\tdate_time_value(hour, DateTime, Hour),\n\tdate_time_value(minute, DateTime, Minute),\n\tdate_time_value(second, DateTime, Second),\n\tdate_time_value(utc_offset, DateTime, Off),\n\tdate_time_value(time_zone, DateTime, TZ),\n\tdate_time_value(daylight_saving, DateTime, DST).\n\ncreatestamp(Hour,Minute,Stamp) :-\n\tcurrenttime(Year,Month,Day,_,_,_,Off,TZ,DST),\n\tdate_time_stamp(date(Year,Month,Day,Hour,Minute,0,Off,TZ,DST), Stamp).\n\nisWithinRange(Start,End) :-\n\t%get_time(Stamp),\t% system function\n\tgettime(Stamp),\t\t% custom function\n\tStamp < End,\n\tStamp > Start.\n\n:- dynamic gettime/1.\n\ngettime(X) :-\n\tget_time(X).\n\n% start time comes before end time\ntimeok(StartH,StartM,EndH,EndM) :-\n\tcreatestamp(StartH,StartM,StampFrom),\n\tcreatestamp(EndH,EndM,StampTill),\n\tStampFrom < StampTill,\n\tisWithinRange(StampFrom,StampTill).\n\n% start time comes after end time\ntimeok(StartH,StartM,EndH,EndM) :-\n\tcreatestamp(StartH,StartM,StampFrom),\n\tcreatestamp(EndH,EndM,StampTill),\n\tStampFrom > StampTill,\n\tisWithinRange(StampTill,StampFrom).\n% Helper rules for the untrusted element\nallattr(ElInstance, Result) :-\n\tfindall(Attr, input(ElInstance,_,Attr,_,_,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nallvalues(ElInstance, Result) :-\n\tfindall(Value, input(ElInstance,_,_,Value,_,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nalltransforms(ElInstance, Result) :-\n\tfindall(Trans, input(ElInstance,_,_,_,Trans,_),L),\n\tappend(L, W),\n\tsort(W,Result).\n\nalltimes(ElInstance, Final) :-\n\tfindall(Time, input(ElInstance,_,_,_,_,Time),Times),\n\tfindmax(Times,Final).\n\n\naccMax([H|T],Acc,Max) :-\n\tH > Acc,\n\taccMax(T,H,Max).\n\naccMax([H|T],Acc,Max) :-\n\tH =< Acc,\n\taccMax(T,Acc,Max).\n\naccMax([],Acc,Acc).\n\nfindmax(List,Max) :-\n\tList = [H|_],\n\taccMax(List,H,Max).\n"
}